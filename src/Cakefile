# This file proves you can have your cake and eat it too

###########################################
# Assumes you are working in Github
#   - if frequently committing, type 'cake Install' 

###########################################
# Assumes literate programming; i.e. all
# source in .coffee.md files.

###########################################
# Assumes there may be a 'hello.txt' file to print
#   - Optional. stores in ../src/hello.txt

###########################################
# Assumes TDD; specifically, the existance of
#
# 1) Test code that runs in you load that file
#   - stored in ../test/*.coffee files 
#
# 2) Source code that returns, optionally, @tests
# which is a list of test cases to run
#   - stored in ../src/*.coffee.md 
#
# So for short demo, tutorial tests, use
# egXYZ functions in ../src/*.coffee.md and
# list all those functions on the last line; e.g
#
#    @tests=[eg1,eg2]
#
# And for longer tests, place tests for
# ../src/X.coffee.md in ../test/X.coffee

###########################################
# Config

all     = [ "our",   "rand",
            "col",   "num",  "sym",
            "lines", "csv",  "row", "table",
            "bins" ]

src     = process.env.PWD + "/../src/"
test    = process.env.PWD + "/../test/"
hello   = 'hello.txt'
#
###########################################
# Stop typing. Everything below should be generic
{exec} = require 'child_process'
fs     = require 'fs'

# show hello file, if it exists
task "About", "Show " + hello,->
  fs.readFile src+hello, ( err, str ) ->
    if not err
      process.stdout.write bold+yellow+(str.toString())+reset 

bold = red = green = yellow = reset = ''
unless process.env.NODE_DISABLE_COLORS
    bold   = '\x1B[0;1m'
    red    = '\x1B[0;31m'
    green  = '\x1B[0;32m'
    yellow = '\x1B[0;33m'
    reset  = '\x1B[0m'

task 'Setup', "Set stuff up (needs only to be sh once)", ->
  make ".gitignore", gitignore

task 'Update', 'Update from github', ->
	sh "git pull"

option null, '--who [GH Peson]', "set github user.name for 'Github'"
option null, '--elm [GH email]', "set github user.email for 'Github'"

task 'Github', 'Setup for github', (the)->
   who = the.who or "'Tim Menzies'"
   elm = the.elm or "'tim.menzies@gmail.com'"
   sh 'git config --global user.name '  + who
   sh 'git config --global user.email ' + elm

task 'Commit', 'Push back to  github', ->
  sh "git status; git commit -am 'committing'; git push"

task 'Inspire', "So you think you're so great?", ->
  console.log alexy

task 'Tests','run all tests/*.coffee', ->
  (test1 t for t in all)

alexy="""
        'The stars and the sun are everywhere… I did not expect all this.
        The silence struck me. I could hear my heart beating so clearly.
        I could hear my breath – it even hurt to think.'
        -- Alexy Leonev

        On March 18, 1965, Alexey Leonov stepped outside the thin
        metal shell of Voskhod-2 to float in the harsh void of
        space. For 12 minutes and 9 seconds, Leonov opened the doors
        on an entire new branch of exploration as the first
        spacewalker. It was nearly a disaster.

        Leonov’s spacesuit had bloated and stiffened in the vacuum,
        and was too large and inflexible to reenter the airlock.  He
        opened a valve to slowly release oxygen, depressurizing his
        suit until it was small enough to squeeze within the
        relative safety of the spacecraft.

        His bad luck continued with a harrowing end to the Voskhod-2
        mission. The craft malfunctioned during reentry and the
        automatic re-entry system failed to fire, sending them
        wildly off-course. Worse still, the orbital module failed to
        separate, sending them tumbling. When they finally reached
        solid ground, Leonov and fellow creman Belyayev were greeted
        by wolves and bears when the spacecraft dropped them in the
        middle of a thick forest during a snowstorm.

        It was mating season, so the wolves and bears were even more
        aggressive than usual. The forest was too thick for a rescue
        helicopter to land. They’d opened the hatch with explosive
        bolts on landing, leaving the cosmonauts exposed to the
        storm and subzero temperatures. The electrical system
        malfunctioned, knocking out the heater while the fans ran at
        full blast. Sweat in their spacesuits threatened to freeze,
        forcing them to wring the suits out to prevent frostbite. A
        rescue party on skis finally reached them the second day,
        chopping wood for a small log cabin and an enormous bonfire.
        Most importantly, the rescuers brought brandy to celebrate
        the triumphant mission. The next morning, the cosmonauts
        skied several kilometres to a pickup location.

        Postscript: At the time of this writing (August 2017), he is
        still alive and kicking. Clearly, nothing can kill this guy.
      """

gitignore="""
        #vimstuff
        [._]*.s[a-w][a-z]
        [._]s[a-w][a-z]
        *.un~
        Session.vim
        netrwhist
        *~
        # sed stuff
        *.bak
        # doc stuff
        docs
        locco
        # mac stuff
        .DS_Store
        # testing stuff
        _allok.lua
        * coffeescript stuff
        raw
        presentation
        test.coffee
        test*.coffee
        test.coffee.md
        test*.coffee.md
        test/*.js
        parser.output
        /node_modules
        npm-debug.log*

        """
#############################################

sh = (com, callback=((-> true))) ->
  console.log com
  coffee = exec com
  coffee.stderr.on 'data', (data) ->
    process.stderr.write data.toString()
  coffee.stdout.on 'data', (data) ->
    console.log ">",data.toString()
  coffee.on 'exit', (code) ->
    callback?() if code is 0

make = (file,str) ->
  fs.exists file, (( exists ) ->
    if not exists
      fs.writeFile file , str, (error) ->
        console.error("Error writing file", error) if error),
    sh "git add " + file

files = (stem=".coffee", dir="./") ->
  stemx =  new RegExp(stem,"g");
  (f.replace stemx,'' for f in fs.readdirSync(dir) \
     when stemx.test(f) and '.' isnt f[0])

test1 = (f) ->
  {tests} = require src+f
  if tests
    for t in tests
      t()
  f1 = test+f+'.coffee'
  fs.exists f1, ((exists) ->
    if exists
      require test+f)

#############################################
# add "test X" recipes for all source code
all or= files '.coffee.md'
((do (i) -> task i, 'test '+i,-> test1 i) for i in all)

